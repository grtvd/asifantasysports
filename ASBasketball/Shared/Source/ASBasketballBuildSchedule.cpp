/* ASBasketballBuildSchedule.cpp */

/******************************************************************************/
/******************************************************************************/

#include "CBldVCL.h"
#pragma hdrstop

#include "ASBasketballBuildSchedule.h"

namespace asbasketball
{

/******************************************************************************/

static StaticBuildScheduleGame gEightTeamStaticScheduleGameList[] =
{
	{ 0,	1 },
#if 0	//BOB NEED
	{ 2,	3 },
	{ 4,	5 },
	{ 6,	7 },
	{ 1,	0 },
	{ 3,	2 },
	{ 5,	4 },
	{ 7,	6 },
	{ 0,	4 },
	{ 1,	5 },
	{ 2,	6 },
	{ 3,	7 },
	{ 0,	5 },
	{ 1,	6 },
	{ 7,	2 },
	{ 4,	3 },
	{ 1,	0 },
	{ 3,	2 },
	{ 5,	4 },
	{ 7,	6 },
	{ 1,	0 },
	{ 4,	2 },
	{ 5,	3 },
	{ 7,	6 },
	{ 0,	6 },
	{ 1,	7 },
	{ 5,	2 },
	{ 3,	4 },
	{ 0,	7 },
	{ 1,	2 },
	{ 3,	6 },
	{ 5,	4 },
	{ 6,	7 },
	{ 2,	4 },
	{ 3,	0 },
	{ 5,	1 },
	{ 4,	1 },
	{ 7,	3 },
	{ 6,	0 },
	{ 2,	5 },
	{ 6,	3 },
	{ 4,	5 },
	{ 7,	1 },
	{ 0,	2 },
	{ 3,	5 },
	{ 2,	7 },
	{ 0,	1 },
	{ 6,	4 },
	{ 6,	7 },
	{ 2,	3 },
	{ 1,	4 },
	{ 5,	0 },
	{ 5,	7 },
	{ 4,	6 },
	{ 3,	2 },
	{ 0,	1 },
	{ 2,	0 },
	{ 3,	1 },
	{ 4,	6 },
	{ 7,	5 },
	{ 5,	6 },
	{ 7,	4 },
	{ 3,	0 },
	{ 1,	2 },
	{ 2,	1 },
	{ 0,	3 },
	{ 4,	6 },
	{ 5,	7 },
	{ 3,	0 },
	{ 2,	1 },
	{ 4,	7 },
	{ 6,	5 },
	{ 6,	4 },
	{ 1,	3 },
	{ 2,	0 },
	{ 7,	5 },
	{ 6,	2 },
	{ 3,	1 },
	{ 7,	0 },
	{ 4,	5 },
	{ 5,	6 },
	{ 7,	4 },
	{ 0,	2 },
	{ 1,	3 },
	{ 1,	2 },
	{ 0,	3 },
	{ 5,	7 },
	{ 6,	4 },
	{ 4,	7 },
	{ 6,	5 },
	{ 2,	0 },
	{ 3,	1 },
	{ 1,	3 },
	{ 7,	4 },
	{ 0,	2 },
	{ 5,	6 },
	{ 4,	0 },
	{ 2,	3 },
	{ 6,	1 },
	{ 7,	5 },
	{ 0,	3 },
	{ 2,	1 },
	{ 4,	7 },
	{ 6,	5 },
#endif	//BOB NEED
};

static int gEightTeamStaticScheduleGameListCount =
	sizeof(gEightTeamStaticScheduleGameList)/sizeof(*gEightTeamStaticScheduleGameList);

/******************************************************************************/

static StaticBuildScheduleGame gTenTeamStaticScheduleGameList[] =
{
/* Week		Game1			Game2			Game3			Game4			Game5 */
/*  1 */	{ 0,	3 },	{ 1,	8 },	{ 2,	4 },	{ 5,	6 },	{ 7,	9 },
/*  2 */	{ 0,	7 },	{ 1,	5 },	{ 2,	8 },	{ 3,	4 },	{ 6,	9 },
/*  3 */	{ 5,	2 },	{ 6,	4 },	{ 7,	1 },	{ 8,	3 },	{ 9,	0 },
/*  4 */	{ 2,	0 },	{ 4,	1 },	{ 6,	3 },	{ 8,	5 },	{ 9,	7 },
/*  5 */	{ 0,	1 },	{ 2,	3 },	{ 4,	8 },	{ 5,	9 },	{ 6,	7 },
/*  6 */	{ 3,	1 },	{ 4,	0 },	{ 6,	2 },	{ 7,	5 },	{ 9,	8 },
/*  7 */	{ 0,	5 },	{ 1,	2 },	{ 3,	9 },	{ 4,	7 },	{ 6,	8 },
/*  8 */	{ 2,	0 },	{ 4,	1 },	{ 5,	3 },	{ 8,	7 },	{ 9,	6 },
/*  9 */	{ 0,	4 },	{ 1,	3 },	{ 2,	6 },	{ 5,	7 },	{ 8,	9 },
/* 10 */	{ 1,	0 },	{ 3,	2 },	{ 7,	6 },	{ 8,	4 },	{ 9,	5 },
/* 11 */	{ 3,	0 },	{ 4,	2 },	{ 6,	5 },	{ 8,	1 },	{ 9,	7 },
/* 12 */	{ 2,	1 },	{ 5,	0 },	{ 7,	4 },	{ 8,	6 },	{ 9,	3 },
/* 13 */	{ 0,	1 },	{ 2,	3 },	{ 4,	9 },	{ 5,	6 },	{ 7,	8 },
/* 14 */	{ 0,	3 },	{ 1,	9 },	{ 2,	4 },	{ 5,	8 },	{ 6,	7 },
/* 15 */	{ 0,	6 },	{ 1,	2 },	{ 3,	4 },	{ 5,	7 },	{ 8,	9 },
/* 16 */	{ 0,	4 },	{ 1,	3 },	{ 2,	7 },	{ 5,	9 },	{ 6,	8 },
/* 17 */	{ 4,	3 },	{ 5,	1 },	{ 7,	0 },	{ 8,	2 },	{ 9,	6 },
/* 18 */	{ 3,	0 },	{ 4,	2 },	{ 7,	6 },	{ 8,	5 },	{ 9,	1 },
/* 19 */	{ 1,	0 },	{ 3,	2 },	{ 6,	5 },	{ 8,	7 },	{ 9,	4 },
/* 20 */	{ 0,	2 },	{ 1,	4 },	{ 3,	6 },	{ 5,	8 },	{ 7,	9 },
/* 21 */	{ 3,	1 },	{ 4,	0 },	{ 7,	2 },	{ 8,	6 },	{ 9,	5 },
/* 22 */	{ 0,	2 },	{ 1,	4 },	{ 3,	5 },	{ 6,	9 },	{ 7,	8 },
/* 23 */	{ 0,	8 },	{ 1,	6 },	{ 2,	9 },	{ 3,	7 },	{ 4,	5 },
/* 24 */	{ 2,	1 },	{ 4,	3 },	{ 6,	0 },	{ 7,	5 },	{ 9,	8 },
};

static int gTenTeamStaticScheduleGameListCount =
	sizeof(gTenTeamStaticScheduleGameList)/sizeof(*gTenTeamStaticScheduleGameList);

/******************************************************************************/
/******************************************************************************/

StaticBuildScheduleGame* ASBasketballBuildSchedule::getStaticScheduleGameList(
	int numTeams,int& numGames)
{
	StaticBuildScheduleGame* gameList;

	if(numTeams == 8)
	{
		gameList = gEightTeamStaticScheduleGameList;
		numGames = gEightTeamStaticScheduleGameListCount;
	}
	else if(numTeams == 10)
	{
		gameList = gTenTeamStaticScheduleGameList;
		numGames = gTenTeamStaticScheduleGameListCount;
	}
	else
		throw ASIException("ASBasketballBuildSchedule::getStaticScheduleGameList: "
			"unsupported number of teams");

	return(gameList);
}

/******************************************************************************/

}; //asbasketball

/******************************************************************************/
/******************************************************************************/
